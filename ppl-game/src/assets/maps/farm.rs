use crate::{
    assets::blocks::{generic::Generic, wheat::Wheat},
    things::{BlockData, CollisionTy},
    ui::{BlockTy, Point},
};

#[rustfmt::skip]
pub fn init() -> Vec<BlockData> {
    vec![
        BlockData::new(Point(2, 0), CollisionTy::CanUse, BlockTy::NPCFarmer, Generic.into()),
        BlockData::new(Point(3, 0), CollisionTy::Collision, BlockTy::Wall, Generic.into()),
        BlockData::new(Point(10, 0), CollisionTy::CanUse, BlockTy::Wheat, Wheat::new().into()),
        BlockData::new(Point(11, 0), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(12, 0), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(0, 1), CollisionTy::NoCollision, BlockTy::WallDoor, Generic.into()),
        BlockData::new(Point(1, 1), CollisionTy::Collision, BlockTy::Wall, Generic.into()),
        BlockData::new(Point(2, 1), CollisionTy::Collision, BlockTy::Wall, Generic.into()),
        BlockData::new(Point(3, 1), CollisionTy::Collision, BlockTy::Wall, Generic.into()),
        BlockData::new(Point(10, 1), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(11, 1), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(5, 2), CollisionTy::CanUse, BlockTy::Wheat, Wheat::new().into()),
        BlockData::new(Point(6, 2), CollisionTy::CanUse, BlockTy::Wheat, Wheat::new().into()),
        BlockData::new(Point(8, 2), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(9, 2), CollisionTy::NoCollision, BlockTy::BridgeV, Generic.into()),
        BlockData::new(Point(10, 2), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(11, 2), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(12, 2), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(13, 2), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(2, 3), CollisionTy::CanUse, BlockTy::Wheat, Wheat::new().into()),
        BlockData::new(Point(3, 3), CollisionTy::CanUse, BlockTy::Wheat, Wheat::new().into()),
        BlockData::new(Point(4, 3), CollisionTy::CanUse, BlockTy::Wheat, Wheat::new().into()),
        BlockData::new(Point(5, 3), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(6, 3), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(7, 3), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(8, 3), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(13, 3), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(14, 3), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(15, 3), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(16, 3), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(0, 4), CollisionTy::CanUse, BlockTy::Wheat, Wheat::new().into()),
        BlockData::new(Point(1, 4), CollisionTy::CanUse, BlockTy::Wheat, Wheat::new().into()),
        BlockData::new(Point(2, 4), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(3, 4), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(4, 4), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(5, 4), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(6, 4), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(15, 4), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(16, 4), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(17, 4), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(0, 5), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(1, 5), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(2, 5), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(3, 5), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(0, 6), CollisionTy::Collision, BlockTy::Water, Generic.into()),
        BlockData::new(Point(1, 6), CollisionTy::Collision, BlockTy::Water, Generic.into()),
    ]
}
